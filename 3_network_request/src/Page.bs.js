// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var networkRequest = fetch("https://raw.githubusercontent.com/reach/router/master/.gitignorehttps://raw.githubusercontent.com/facebook/react/master/packages/react/index.js").then((function (prim) {
        return prim.text();
      }));

var component = ReasonReact.reducerComponent("Page");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", undefined, React.createElement("h2", undefined, "Static Fetch request"), React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(self[/* send */3], /* RequestData */0);
                                })
                            }, "Fetch"), React.createElement("div", undefined, self[/* state */1][/* result */0]));
            }),
          /* initialState */(function () {
              return /* record */[/* result */""];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[/* result */action[0]]]);
              } else {
                return /* SideEffects */Block.__(1, [(function (self) {
                              networkRequest.then((function (value) {
                                      console.log(value);
                                      Curry._1(self[/* send */3], /* ChangeResult */[value]);
                                      return Promise.resolve(/* () */0);
                                    }));
                              return /* () */0;
                            })]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.networkRequest = networkRequest;
exports.component = component;
exports.make = make;
/* networkRequest Not a pure module */
